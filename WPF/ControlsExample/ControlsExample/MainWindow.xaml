<Window x:Class="ControlsExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
		xmlns:custom="clr-namespace:CustomBehavioursLibrary;assembly=CustomBehavioursLibrary"
        Title="MainWindow" Height="500" Width="525">

	<!-- 
		* NOTE: xmlns:i and xmlns:custom were added for Behaviours library 
	-->
	
	<Window.Resources>
		<ImageBrush x:Key="TileBrush" TileMode="Tile" ViewportUnits="Absolute" Viewport="0 0 32 32" ImageSource=".\Images\LogitechG7.png" Opacity="0.3"></ImageBrush>

		<!-- 5th tab, Demonstrating styles, when used within resources -->
		<Style x:Key="BigFontButtonStyle">
			<Setter Property="Control.FontFamily" Value="Times New Roman" />
			<Setter Property="Control.FontSize" Value="18" />
			<Setter Property="Control.FontWeight" Value="Bold" />
		</Style>
		
		<!-- 5th tab, showing styles to set event handlers -->
		<Style x:Key="MouseOverHighlightStyle">
			<EventSetter Event="TextBlock.MouseEnter" Handler="element_mouseEnter" />
			<EventSetter Event="TextBlock.MouseLeave" Handler="element_mouseLeave" />
		</Style>
		
		<!-- 5th tab, showing style inheritance -->
		<Style x:Key="EmphasisedBigFontButtonStyle" BasedOn="{StaticResource BigFontButtonStyle}">
			<Setter Property="Control.Foreground" Value="white" />
			<Setter Property="Control.Background" Value="DarkBlue" />
		</Style> 
		
		<!-- 5th tab, simple trigger -->
		<Style x:Key="BigFontButtonTriggerStyle" TargetType="{x:Type Button}" >
			<Style.Setters>
				<Setter Property="FontFamily" Value="Times New Roman" />
				<Setter Property="FontSize" Value="18" />
			</Style.Setters>
			
			<!-- setup trigger, and what it does with the setter property -->
			<Style.Triggers>
				<Trigger Property="Control.IsFocused" Value="True">
					<Setter Property="Control.Foreground" Value="DarkRed" />
				</Trigger>
                <Trigger Property="Control.IsFocused" Value="False">
                    <Setter Property="Control.Foreground" Value="Orange" />
                </Trigger>
            </Style.Triggers>
		</Style>
		
		<!-- 5th tab, animate font size for 0.2 seconds -->
		<Style x:Key="BigFontButtonAnimationStyle">
			<Style.Setters>
				<Setter Property="Control.FontFamily" Value="Tahoma" />
				<Setter Property="Control.FontSize" Value="12" />
			</Style.Setters>
			
			
			<Style.Triggers>
				<!-- Animate font to be larger over 0.2 seconds -->
				<EventTrigger RoutedEvent="Mouse.MouseEnter">
					<EventTrigger.Actions>
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="FontSize" To="24" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger.Actions>
				</EventTrigger>
				
				<!-- Animate font to return to original state over 2 seconds -->
				<EventTrigger RoutedEvent="Mouse.MouseLeave">
					<EventTrigger.Actions>
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation Duration="0:0:2" Storyboard.TargetProperty="FontSize" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger.Actions>
				</EventTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	
	<!-- Stick components onto form -->
	<TabControl Margin="5">
		
		<TabItem Header="Buttons">
			<GroupBox Header="Set of button examples" DockPanel.Dock="Top" Padding="5" Margin="5" VerticalAlignment="top">
				<StackPanel>
					<!-- standard button -->
					<Button Margin="3">Text content</Button>

					<!-- button with image inside -->
					<Button Margin="3">
						<Image Source=".\Images\LogitechG7.png" Stretch="None"></Image>
					</Button>

					<!-- button with multiple items inside a stack panel -->
					<Button Margin="3" ToolTip="Image and two textBlock's inside a button" Click="ButtonBase_OnClick">
						<StackPanel>
							<TextBlock Margin="3">Image and text button</TextBlock>
							<Image Source=".\Images\LogitechG7.png" Stretch="None"></Image>
							<TextBlock Margin="3">Courtesy of stackPanel</TextBlock>
						</StackPanel>
					</Button>

					<!-- button with shape content and special tooltip -->
					<Button Margin="3">

						<!-- Assign tooltip to this particular button, containing nested elements -->
						<Button.ToolTip>
							<StackPanel>
								<TextBlock Margin="3">Combination tooltip ...</TextBlock>
								<Image Source=".\Images\LogitechG7.png" Stretch="UniformToFill" Height="40" Width="40"></Image>
								<TextBlock Margin="3">made up of textBlock and image</TextBlock>
							</StackPanel>
						</Button.ToolTip>

						<!-- Button contents, which is a shape -->
						<Grid>
							<Polygon Points="100,25 125,0 200,25 125,50" Fill="LightSteelBlue"/>
							<Polygon Points="100,25 70,0 0,25 75,50" Fill="White" />
						</Grid>
					</Button>
					
					<!-- Tiled button, using a static resource; its only static because its loaded static -->
					<Button Background="{StaticResource TileBrush}" Margin="5" Padding="5" FontWeight="bold" FontSize="14">Tiled button (TileBrush)</Button>
				</StackPanel>
			</GroupBox>
		</TabItem>
		
		<TabItem Header="Text Items">
			<StackPanel>
				<!-- Demonstration of using a popup on a string, with a word underlined to show popup -->
				<TextBlock TextWrapping="Wrap">You can use a popup to provide a link for a cspecific <Run TextDecorations="Underline" MouseEnter=" run_MouseEnter">term</Run> of interest.</TextBlock>
				<Popup Name="popLink" StaysOpen="false" Placement="Mouse" MaxWidth="200" PopupAnimation="Slide" AllowsTransparency="True">
					<Border BorderBrush="Beige" BorderThickness="2" Background="Wheat">
						<TextBlock Margin="10" TextWrapping="Wrap">
					For more information, see <Hyperlink NavigateUri="http://en.wikipedia.org/wiki/term" Click="lnk_Click">Wikipedia</Hyperlink>
						</TextBlock>
					</Border>
				</Popup>
				
				<TextBox SpellCheck.IsEnabled="True" TextWrapping="WrapWithOverflow" VerticalScrollBarVisibility="Auto">
					This text was entered for demo purposes and contains a handful of spelling errors; sych as this and thot.
					Right click item underlined with red squiggly to invoke spell-checker.
				</TextBox>
			</StackPanel>
		</TabItem>
		
		<!-- 3RD Tab - Expander -->
		<TabItem Header="Expander">
			<StackPanel>
				
				<Expander Margin="3" Padding="5" Header="Region 1">
					<Button Padding="3">Hidden button 1</Button>
				</Expander>
				
				<Expander Margin="3" Padding="5" Header="Region 2">
					<StackPanel>
						<Label>Some form of text was typed here so it can be seen inside of an expander item</Label>
						<Button Margin="3" Padding="5">Do something here with a button</Button>
					</StackPanel>
				</Expander>
				
				<Expander Margin="3" Padding="5" Header="Region 3">
					<Button Padding="3">Hidden button 2</Button>
				</Expander>

			</StackPanel>
		</TabItem>
		
		<!-- 4TH Tab - ListBox -->
		<TabItem Header="ListBox">
			<StackPanel>
				<!-- Image list box -->
				<ListBox x:Uid="listBox_00">
					<ListBoxItem>
						<StackPanel Orientation="Horizontal">
							<Image Source=".\Images\LogitechG5.png" Width="80" Height="80"></Image>
							<Label VerticalContentAlignment="Center">A nice mouse</Label>
						</StackPanel>
					</ListBoxItem>
					
					<ListBoxItem>
						<StackPanel Orientation="Horizontal">
							<Image Source=".\Images\LogitechG7.png" Width="80" Height="80"></Image>
							<Label VerticalContentAlignment="Center">A nicer mouse</Label>
						</StackPanel>
					</ListBoxItem>
					
					<ListBoxItem>
						<StackPanel Orientation="Horizontal">
							<Image Source=".\Images\LogitechVX.png" Width="80" Height="80"></Image>
							<Label VerticalContentAlignment="Center">Smaller mouse</Label>
						</StackPanel>
					</ListBoxItem>
				</ListBox>
				
				<!-- Listbox made up of checkboxes -->
				<ListBox Name="lstCheckboxes" SelectionChanged="lstCheckboxes_SelectionChanged" CheckBox.Click="lstCheckboxes_SelectionChanged">
					<CheckBox Margin="3">Option 1</CheckBox>
					<CheckBox Margin="3">Option 2</CheckBox>
				</ListBox>
				<Label Name="lblCheckboxOutput">Output:</Label>
			</StackPanel>
		</TabItem>
		
		<!-- 5TH tab - Styles -->
		<TabItem Header="Styles">
			<StackPanel>
				<Button Padding="5" Margin="5" Name="btnCmd" Style="{StaticResource BigFontButtonStyle}"> Customised button</Button>
				<Button Padding="5" Margin="5" Name="btnCmd2" Style="{StaticResource EmphasisedBigFontButtonStyle}" >Uses emphasisedBigFontButtonStyle</Button>
				<Button Padding="5" Margin="5" Name="btnCmd3" Style="{StaticResource BigFontButtonTriggerStyle}">Customised button with trigger</Button>
				<Button Padding="5" Margin="5" Name="btnCmd4" Style="{StaticResource BigFontButtonAnimationStyle}">Animated button with trigger</Button>
				
				<TextBlock Style="{StaticResource MouseOverHighlightStyle}">Hover over me</TextBlock>
				<TextBlock>Standard textBlock</TextBlock>
				<TextBlock Style="{StaticResource MouseOverHighlightStyle}">Hover over me 2</TextBlock>
				
			</StackPanel>
		</TabItem>

		<!-- 6TH tab - Behaviours -->
		<TabItem Header="Behaviours">
			<Canvas>
				<Rectangle Canvas.Left="10" Canvas.Top="10" Fill="Yellow" Width="40" Height="60"></Rectangle>
				
				<Ellipse Canvas.Left="10" Canvas.Top="70" Fill="blue" Width="80" Height="60">
					<i:Interaction.Behaviors>
						<custom:DragInCanvasBehaviour></custom:DragInCanvasBehaviour>
					</i:Interaction.Behaviors>
				</Ellipse>
				
				<Ellipse Canvas.Left="129" Canvas.Top="68" Fill="OrangeRed" Width="40" Height="70">
					<i:Interaction.Behaviors>
						<custom:DragInCanvasBehaviour></custom:DragInCanvasBehaviour>
					</i:Interaction.Behaviors>
				</Ellipse>
				
			</Canvas>
		</TabItem>
		
	</TabControl>
	
</Window>
